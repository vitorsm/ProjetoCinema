-- MySQL Script generated by MySQL Workbench
-- Seg 29 Mai 2017 19:55:41 BRT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Cinema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Cinema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Cinema` DEFAULT CHARACTER SET utf8 ;
USE `Cinema` ;

-- -----------------------------------------------------
-- Table `Cinema`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`Usuario` (
  `CodUsuario` INT NOT NULL AUTO_INCREMENT,
  `NmUsuario` VARCHAR(55) NOT NULL,
  `UserName` VARCHAR(45) NOT NULL,
  `Senha` VARCHAR(155) NOT NULL,
  PRIMARY KEY (`CodUsuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cinema`.`Sala`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`Sala` (
  `CodSala` INT NOT NULL AUTO_INCREMENT,
  `QtdFilas` INT NOT NULL,
  `QtdColunas` INT NOT NULL,
  `Autor_CodUsuario` INT NOT NULL,
  PRIMARY KEY (`CodSala`),
  INDEX `fk_Sala_Usuario1_idx` (`Autor_CodUsuario` ASC),
  CONSTRAINT `fk_Sala_Usuario1`
    FOREIGN KEY (`Autor_CodUsuario`)
    REFERENCES `Cinema`.`Usuario` (`CodUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cinema`.`Filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`Filme` (
  `CodFilme` INT NOT NULL AUTO_INCREMENT,
  `NmFilme` VARCHAR(45) NOT NULL,
  `Lancamento` DATE NOT NULL DEFAULT CURDATE(),
  `Duracao` INT NOT NULL,
  `Autor_CodUsuario` INT NOT NULL,
  PRIMARY KEY (`CodFilme`),
  INDEX `fk_Filme_Usuario1_idx` (`Autor_CodUsuario` ASC),
  CONSTRAINT `fk_Filme_Usuario1`
    FOREIGN KEY (`Autor_CodUsuario`)
    REFERENCES `Cinema`.`Usuario` (`CodUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cinema`.`Lingua`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`Lingua` (
  `CodLingua` INT NOT NULL AUTO_INCREMENT,
  `NmLingua` VARCHAR(45) NOT NULL,
  `Autor_CodUsuario` INT NOT NULL,
  PRIMARY KEY (`CodLingua`),
  INDEX `fk_Lingua_Usuario1_idx` (`Autor_CodUsuario` ASC),
  CONSTRAINT `fk_Lingua_Usuario1`
    FOREIGN KEY (`Autor_CodUsuario`)
    REFERENCES `Cinema`.`Usuario` (`CodUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cinema`.`LinguaAudioFilme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`LinguaAudioFilme` (
  `CodFilme` INT NOT NULL,
  `CodLingua` INT NOT NULL,
  PRIMARY KEY (`CodFilme`, `CodLingua`),
  INDEX `fk_Filme_has_Linguagem_Linguagem1_idx` (`CodLingua` ASC),
  INDEX `fk_Filme_has_Linguagem_Filme_idx` (`CodFilme` ASC),
  CONSTRAINT `fk_Filme_has_Linguagem_Filme`
    FOREIGN KEY (`CodFilme`)
    REFERENCES `Cinema`.`Filme` (`CodFilme`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Filme_has_Linguagem_Linguagem1`
    FOREIGN KEY (`CodLingua`)
    REFERENCES `Cinema`.`Lingua` (`CodLingua`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cinema`.`LinguaLegendaFilme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`LinguaLegendaFilme` (
  `CodFilme` INT NOT NULL,
  `CodLingua` INT NOT NULL,
  PRIMARY KEY (`CodFilme`, `CodLingua`),
  INDEX `fk_Filme_has_Linguagem_Linguagem2_idx` (`CodLingua` ASC),
  INDEX `fk_Filme_has_Linguagem_Filme1_idx` (`CodFilme` ASC),
  CONSTRAINT `fk_Filme_has_Linguagem_Filme1`
    FOREIGN KEY (`CodFilme`)
    REFERENCES `Cinema`.`Filme` (`CodFilme`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Filme_has_Linguagem_Linguagem2`
    FOREIGN KEY (`CodLingua`)
    REFERENCES `Cinema`.`Lingua` (`CodLingua`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cinema`.`Sessao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`Sessao` (
  `CodSala` INT NOT NULL,
  `CodFilme` INT NOT NULL,
  `Data` TIMESTAMP NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`CodSala`, `CodFilme`, `Data`),
  INDEX `fk_Sala_has_Filme_Filme1_idx` (`CodFilme` ASC),
  INDEX `fk_Sala_has_Filme_Sala1_idx` (`CodSala` ASC),
  CONSTRAINT `fk_Sala_has_Filme_Sala1`
    FOREIGN KEY (`CodSala`)
    REFERENCES `Cinema`.`Sala` (`CodSala`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Sala_has_Filme_Filme1`
    FOREIGN KEY (`CodFilme`)
    REFERENCES `Cinema`.`Filme` (`CodFilme`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cinema`.`Ingresso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cinema`.`Ingresso` (
  `Fila` INT NOT NULL,
  `Coluna` VARCHAR(45) NOT NULL,
  `CodSala` INT NOT NULL,
  `CodFilme` INT NOT NULL,
  `Data` TIMESTAMP NOT NULL DEFAULT NOW(),
  `DataCompra` TIMESTAMP NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`Fila`, `Coluna`, `CodSala`, `CodFilme`, `Data`),
  INDEX `fk_Ingresso_AgendaSala1_idx` (`CodSala` ASC, `CodFilme` ASC, `Data` ASC),
  CONSTRAINT `fk_Ingresso_AgendaSala1`
    FOREIGN KEY (`CodSala` , `CodFilme` , `Data`)
    REFERENCES `Cinema`.`Sessao` (`CodSala` , `CodFilme` , `Data`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
